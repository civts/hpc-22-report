@article{Fortune_Hopcroft,
  title    = {A note on Rabin's nearest-neighbor algorithm},
  journal  = {Information Processing Letters},
  volume   = {8},
  number   = {1},
  pages    = {20-23},
  year     = {1979},
  issn     = {0020-0190},
  doi      = {https://doi.org/10.1016/0020-0190(79)90085-1},
  url      = {https://www.sciencedirect.com/science/article/pii/0020019079900851},
  author   = {Steve Fortune and John Hopcroft},
  keywords = {Probabilistic algorithms, nearest neighbor, hashing}
}

@inproceedings{closest_pair_definition,
  author    = {Shamos, Michael Ian and Hoey, Dan},
  booktitle = {16th Annual Symposium on Foundations of Computer Science (sfcs 1975)},
  title     = {Closest-point problems},
  year      = {1975},
  volume    = {},
  number    = {},
  pages     = {151-162},
  doi       = {10.1109/SFCS.1975.8}
}

#Maybe we will check this sometime
@article{ge2006improved,
  title     = {An improved algorithm for finding the closest pair of points},
  author    = {Ge, Qi and Wang, Hai-Tao and Zhu, Hong},
  journal   = {Journal of computer Science and Technology},
  volume    = {21},
  number    = {1},
  pages     = {27--31},
  year      = {2006},
  publisher = {Springer}
}

@book{preparata1993computational,
  title     = {Computational Geometry: An Introduction},
  author    = {Preparata, Franco P. and Shamos, Michael lan},
  isbn      = {9780387961316},
  series    = {Monographs in Computer Science},
  year      = {1985},
  publisher = {Springer New York}
}

@inproceedings{divide_and_conq_3NlgN,
  author    = {Bentley, Jon Louis and Shamos, Michael Ian},
  title     = {Divide-and-Conquer in Multidimensional Space},
  year      = {1976},
  isbn      = {9781450374149},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/800113.803652},
  doi       = {10.1145/800113.803652},
  abstract  = {We investigate a divide-and-conquer technique in multidimensional space which decomposes a geometric problem on N points in k dimensions into two problems on N/2 points in k dimensions plus a single problem on N points in kâˆ’1 dimension. Special structure of the subproblems is exploited to obtain an algorithm for finding the two closest of N points in 0(N log N) time in any dimension. Related results are discussed, along with some conjectures and unsolved geometric problems.},
  booktitle = {Proceedings of the Eighth Annual ACM Symposium on Theory of Computing},
  pages     = {220-230},
  numpages  = {11},
  location  = {Hershey, Pennsylvania, USA},
  series    = {STOC '76}
}

@misc{lingqi,
  title  = {Closest Pair of Points (Divide and Conquer) Explained},
  author = {Ling Qi},
  year   = {2021},
  url    = {https://youtu.be/6u_hWxbOc7E?t=270}
}

@misc{gh1,
  title  = {MPI\_Multithreads\_Closest\_Pair\_of\_Points},
  author = {Vitor-Hub},
  year   = {2022},
  url    = {https://github.com/Vitor-Hub/MPI_Multithreads_Closest_Pair_of_Points}
}

@misc{gh2_fortran,
  title  = {ClosestPairs},
  author = {lm-sousa},
  year   = {2022},
  url    = {https://github.com/lm-sousa/ClosestPairs}
}

@article{wang2020parallel,
  title   = {A parallel batch-dynamic data structure for the closest pair problem},
  author  = {Wang, Yiqiu and Yu, Shangdi and Gu, Yan and Shun, Julian},
  journal = {arXiv preprint arXiv:2010.02379},
  year    = {2020},
  url     = {https://github.com/wangyiqiu/closest-pair}
}

@misc{pbs_super_manual,
  title  = {Altair PBS Professional 2021.1.3
            Big Book},
  author = {Altair},
  year   = {2021},
  url    = {https://help.altair.com/2021.1.3/PBS%20Professional/PBS2021.1.3.pdf}
}
